# 리스트
리 = 50
리1 = 100
리2 = 150

리스트 = [50, 100, 150] # 변수와비슷 [대괄호]사용
print(리스트)
리스트 = ["오십", "백오십", "이백"] # "큰따음표안 글로"변경가능
print(리스트)
print(리스트.index("백오십"))
리스트.append("이백오십") # .append(~~)으로 리스트 마지막에
# 원하는것을 추가 가능하다
print(리스트)

리스트.insert(1, "백") # insert(~, "~~")으로 리스트
# 사이에 글을 넣을수있다.
print(리스트)
print("-----------------------")
리스트.pop() # 뒤에서 순서대로 1개씩 빼냄
print(리스트)
리스트.append("백")
print(리스트.count("백")) # count("~~")으로 같은게
# 몇개가 들어있는지 확인가능
리스트2 = [1, 4, 2, 7, 5, 3, 6]
print(리스트2)
리스트2.sort() # sort()으로 숫자들을 숫서대로 정열 할수있다.
print(리스트2)
리스트2.reverse() # 순서를 거꾸로 바꾸기
print(리스트2)
리스트2.clear() # clear()은 리스트내용을 전부삭제
print(리스트2)
# 리스트는 여러 정보와 섞어 사용가능
리스트2 = ["코딩", 64, True]
리스트.extend(리스트2) # extend(~~)을하면 다른리스트와
# 합쳐서 사용할수있게된다.
print(리스트)


사전 = {5:"양현준", 6:"개", 7:"끼"} # 사전은 {중괄호}를쓰고 꼭 숫자를 쓸필요가 없다. # 딕셔너리
print(사전[5]) # 으로 출력할수있다.
print(사전.get(6)) # 으로도 가능하다.
# [대괄호]로 없는걸 출력하면 오류->프로그램종료 get(괄호)로 없는걸 입력하면 없다고 나온다.
print(사전.get(8756, "새")) # get를 이용하면 없는상태일때 뒤에있는걸 출력한다.
print(사전.get(7))
print(5 in 사전)
print("or")
print(8765 in 사전)
사전["번호 8"] = "은 나쁜말" # 있던걸 입력시 덮어쓰기(업데이트)
del 사전[5] # del을 입력하고 지울값을 입력하면 지워진다.
print(사전)
print(사전.keys()) # 안에 무엇무엇(키)이 있는지 알려준다.      # 키는 숫자부분(물론 숫자가 아니여도 상관X)
print(사전.values()) # 안에 무엇무엇(벨룹)이 있는지 알려준다.  # 벨롭은 문자부분(물론 문자가 아니여도 상관X)
print(사전.items()) # 안에 무엇무엇(모두)이 있는지 알려준다.
사전.clear() #전부 삭제
print(사전)

튜플 = ("튜플", "변경불가", "추가불가", "리스트보다 빠름") 
# 튜플 입력시에 (괄,호)로 콤마 사용 
print(튜플[0])
print(튜플[1])
print(튜플[2])
print(튜플[3])

# 집합, 중복 불가, 순서없음, {중괄호}사용
세트 = {1, 2, 3, 3, 3, 4, 5, 4, 6, 7, 6}
print(세트)
세 = {1, 2, 4, 3}   # 이런식으로 세팅해놓고
트 = set([5, 6, 9, 8, 1]) # (~ & ~)식으로 입력하면
print(세 & 트) # 공통으로 안에있는거 출력
print(세 | 트) # 둘중 1개라도 있다면 출력
print(세 - 트) # 앞에도 있지만 뒤에만 없는것 출력
세.add("조커") # add는 추가
구 = 9
트.remove(구) # remove는 빼기
print(세)
print(트)
시험 = {"변경"}
시험 = tuple(시험) # tuple은 튜플 타입으로 변경
print(시험, type(시험))
시험 = set(시험) # set은 세트 타입으로 변경
print(시험, type(시험))
시험 = list(시험) # list은 리스트 타입으로 변경
print(시험, type(시험))
시험 = dict.fromkeys(시험) # dict은 딕셔너리(사전) 타입으로 변경 # fromkeys는 딕셔너리의 '키'부분으로 채움
print(시험, type(시험))